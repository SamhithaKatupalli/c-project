#include <stdio.h>
#include<stdlib.h>

typedef struct employee
{
     int ID;
     char name[50];
     int age;
     long salary;

}employee;


void create()
{
	employee *emp;
	FILE *fp;
	int n,i;
	printf("\nEnter how many employee's records you want create : ");
	scanf("%d",&n);

	emp = (employee*)calloc(n,sizeof(employee));

     fp = fopen("employee.txt","w");

	for(i=0;i<n;i++)
     {
	     printf("\nEnter the employee ID : ");
	     scanf("%d",&emp[i]);
	     fflush(stdin);
	     printf("Enter the Employee Name : ");
	     scanf("%[^\n]",emp[i].name);
	     printf("Enter the Employee Age : ");
	     scanf("%d",&emp[i].age);
	     printf("Enter the Salary : ");
	     scanf("%ld",&emp[i].salary);
	     fwrite(&emp[i],sizeof(employee),1,fp);
     }

    fclose(fp);

}


void view()
{
	employee emp1;
     FILE *fp;

fp = fopen("employee.txt","r");

     printf("\nID\t   Name   \tAge\t\tSalary\n");
     printf("__________________________\n");

     while(fread(&emp1,sizeof(employee),1,fp))
     {
          printf("\n%d\t %s   \t%d\t\t%ld",emp1.ID,emp1.name,emp1.age,emp1.salary);
     }

    fclose(fp);

}


void append()
{
	employee *emp;
     FILE *fp;
     int n,i;
     printf("\nEnter how many employee records that you want to add : ");
     scanf("%d",&n);

     emp = (employee*)calloc(n,sizeof(employee));

     fp = fopen("employee.txt","a");

     for(i=0;i<n;i++)
     {
          printf("\nEnter the employee ID : ");
          scanf("%d",&emp[i]);
          fflush(stdin);
          printf("Enter the Employee Name : ");
          scanf("%[^\n]",emp[i].name);
          printf("Enter the Employee Age : ");
          scanf("%d",&emp[i].age);
          printf("Enter the Salary : ");
          scanf("%ld",&emp[i].salary);
          fwrite(&emp[i],sizeof(employee),1,fp);
     }

    fclose(fp);

}


void search()
{
	employee emp1;
     FILE *fp;
     int ID,found = 0;

     fp = fopen("employee.txt","r");

     printf("Enter Employee ID to Search : ");
     scanf("%d",&ID);
     printf("\nID\tName\tAge\t\tSalary\n");

     while(fread(&emp1,sizeof(employee),1,fp))
     {
     	if(emp1.ID == ID)
	     {
               found = 1;
               printf("\n%d\t%s\t%d\t\t%ld",emp1.ID,emp1.name,emp1.age,emp1.salary);
          }
     }

    if(!found)
    printf("\nRecord NOT Found\n");

    fclose(fp);

}


void edit()
{
	employee emp1;
     FILE *fp, *fp1;
     int ID,found=0;;


     fp = fopen("employee.txt","r");
     fp1 = fopen("edit.txt","w");

     printf("Enter Employee ID to Edit : ");
     scanf("%d",&ID);

     while(fread(&emp1,sizeof(employee),1,fp))
     {
		if(emp1.ID == ID)
	     {
               found = 1;
	          fflush(stdin);
	          printf("Enter the Employee New Name :");
	          scanf("%[^\n]",emp1.name);
	          printf("Enter the Employee Age : ");
	          scanf("%d",&emp1.age);
	          printf("Enter the  New Salary : ");
	          scanf("%ld",&emp1.salary);
          }

         fwrite(&emp1,sizeof(employee),1,fp1);
     }

    fclose(fp);
    fclose(fp1);


if(found)
     {
     	fp1 = fopen("edit.txt","r");
          fp = fopen("employee.txt","w");

          while(fread(&emp1,sizeof(employee),1,fp1))
          {
               fwrite(&emp1,sizeof(employee),1,fp);
	     }

	     fclose(fp);
          fclose(fp1);
     }
    else
          printf("\nRecord NOT Found\n");

}


void delete()
{
	employee emp1;
     FILE *fp, *fp1;
     int ID,found = 0;

     fp = fopen("employee.txt","r");

fp1 = fopen("edit.txt","w");

     printf("Enter Employee ID to delete : ");
     scanf("%d",&ID);

     while(fread(&emp1,sizeof(employee),1,fp))
     {
		if(emp1.ID == ID)
               found = 1;
          else
	          fwrite(&emp1,sizeof(employee),1,fp1);
     }

    fclose(fp);
    fclose(fp1);

    if(found)
	{
     	fp1 = fopen("edit.txt","r");
     	fp = fopen("employee.txt","w");

          while(fread(&emp1,sizeof(employee),1,fp1))
	    {
               fwrite(&emp1,sizeof(employee),1,fp);
	    }


fclose(fp);
		fclose(fp1);
	}
    else
          printf("\nRecord NOT Found\n");

}


int main()
{
     int ch1,ch2;

     printf("\n\t\t\t\tWELCOME\n\n");
     printf("\t\t\tEMPLOYEE MANAGEMENT SYSTEM");
     printf("\n\n1.Showroom\n2.Railways\n3.Software Company\n");
     printf("Enter your choice : ");
     scanf("%d",&ch1);

     if(ch1==1||ch1==2||ch1==3)
    {

	    do
	    {
	          printf("\n\n1>>Create Record");
               printf("\n2>>View all Record");

                      printf("\n3>>Add Record");
	          printf("\n4>>Search Perticular Record");
	          printf("\n5>>Edit Record");
	          printf("\n6>>Delete Record");
	          printf("\n0>>EXIT");

	          printf("\nEnter your choice : ");
	          scanf("%d",&ch2);

	          switch(ch2)
	          {
	               case 1:
	                    create();
	               break;
	               case 2:
	                    view();
	               break;
	               case 3:
	                    append();
	               break;
	               case 4:
				     search();
	               break;
	               case 5:
				     edit();
	               break;

                          case 6:
				     delete();
	               break;
	               case 0:
				     exit(1);
	               default:
				     printf("\nINVALID CHOICE!!!!\n");
	          }

		} while(ch2!=0);
	}

     return 0;

}

